h1 Déployé : corrections dans les calculs de totaux
.intro Les changements plus ou moins récents n'était pas tout à fait justes
html
  body
    p
      | On m&apos;a averti il y a 3 jours de petites diff&eacute;rences de quelques centimes entre le montant des factures/tickets de caisse et les montants affich&eacute;s dans les listes (commandes, paiements ..).
    p
      | Il s&apos;av&egrave;re que le calcul du total de facture est fait &agrave; deux endroits diff&eacute;rents dans le code.
    p
      | Historiquement (jusqu&apos;en mars 2021) tout les calculs &eacute;taient fait cot&eacute; serveur (en 
      strong JavaScript
      | ). Mais c&apos;&eacute;tait un peu lent. Si un prix de produit changeait par exemple, il fallait recalculer les totaux des commandes contenant le produit. Comme c&apos;&eacute;tait lent, j&apos;essayais de le faire le moins souvent possible, avec parfois des bugs ou un total aurait du changer mais restait &agrave; son ancienne valeur.
    p
      | En mars, j&apos;ai introduit une nouvelle mani&egrave;re de calculer ces totaux, directement en base de donn&eacute;e (
      strong mongodb
      | ). C&apos;est beaucoup plus rapide (de l&apos;ordre de 50x plus rapide). L&rsquo;inconv&eacute;nient, c&apos;est que la base de donn&eacute;e &agrave; des diff&eacute;rences subtile dans sa mani&egrave;re de faire les arrondis.
    p
      | J&apos;ai continu&eacute; d&apos;utiliser les deux m&eacute;thodes en parall&egrave;le, mais le r&eacute;sultat &eacute;tait parfois diff&eacute;rent.
    p
      | Cette partie est corrig&eacute;e, j&apos;ai r&eacute;tabli le fonctionnement historique et mongoDB imite maintenant les arrondis fait par JavaScript.
    p
      | J&apos;ai voulu v&eacute;rifier que les totaux correspondaient bien pour toutes les commandes enregistr&eacute;es, et c&apos;est la que j&apos;ai d&eacute;couvert plusieurs bugs
    ul
      li
        | les produits command&eacute;s, puis supprim&eacute;s de la liste de produit par le mara&icirc;cher &eacute;taient &quot;remplac&eacute;s&quot; par le dernier produit de la liste au moment du calcul dans mongodb
      li
        | les frais de livraison &eacute;taient ignor&eacute;s compl&egrave;tement dans le total calcul&eacute; par mongdb
      li
        | les frais de livraison &eacute;taient appliqu&eacute;s pour une commande vide dans le calcul javascript ..
      li
        | les prix comme 0.000000000001 &eacute;taient replac&eacute;s par 0.10&euro; dans le calcul JavaScript
    p Bref, pas mal de points &agrave; corriger.
    p
      | J&apos;ai fait en sorte de sauvegarder le total existant, appliquer les corrections, et ensuite voir ou est ce qu&apos;il y a une diff&eacute;rence entre les deux.
    p
      | Je suis donc en mesure de vous fournir un fichier Excel listant les commandes ayant &quot;boug&eacute;&quot;
    p
      | Puisque l&apos;id&eacute;e principale est de retrouver les m&ecirc;me totaux qu&apos;avant mars, vous devriez pouvoir ignorer les changements list&eacute;s pour les semaines d&apos;avant mars 2021.
    p
      | Je vais envoyer individuellement le fichier par mail &nbsp;aux 7 mara&icirc;chers touch&eacute;s par le probl&egrave;me
    p
      | J&apos;ai aussi livr&eacute; 
      strong deux nouvelles petites fonctions
      |  en passant :
    ul
      li
        | Case a cocher pour afficher les commandes vides dans l&apos;onglet commande, d&eacute;coch&eacute;e par d&eacute;faut
      li
        | Autorisation de prix nul pour les produits (entrer 0). Le produit sera affich&eacute; comme &quot;gratuit&quot; et les clients pourront le commander. Le comportement s&apos;il ne commande que des produits gratuits n&apos;est pas encore clair, mais au moins &ccedil;a devrais pouvoir &eacute;viter les hacks du type &quot;0.000000000001 &euro;/kg &quot;
    p
      br
    p
      br
    p
      br
    p
      br
